
# The presence of a Console

idol.service.con=0

# General Properties of this Entity

idol.entity.name=RasterServer
idol.entity.contactport=4242
idol.entity.mcastAddress=239.192.100.23
idol.entity.mcastBasePort=4400

# The Application 

# The initializer must implement EntityInitializer and it must either
# a be subclass of Server.ServerInitializer or a subclass of
# Client.ClientInitializer.  It must have a one-arg constructor that
# takes a Properties Object.

idol.entity.initializer=mil.navy.nrl.cmf.sousa.idol.service.raster.RasterServerInitializer

# Advertisement
# The Entity advertises its content types.
# The Entity can deliver one Renderer for each content type.
idol.initializer.contentType.size=1
idol.initializer.contentType.element.0.type=x-idol/x-coverage
idol.initializer.contentType.element.0.renderer=mil.navy.nrl.cmf.sousa.idol.user.CoverageRenderer

#
# Advertise using this directory service
#
idol.directory.address=dcg7.cmf.nrl.navy.mil
#idol.directory.address=134.207.10.79
idol.directory.contactport=4400

#
# Advertise myself after this many milliseconds
#
idol.directory.advertiseSelf.interval=540000

#
# The TTL of my advertisement
#
idol.directory.advertiseSelf.TTL=600000

# Application-Specific Parameters

idol.pgsql.db=jdbc:postgresql://localhost/idoldb?user=talmage
#idol.pgsql.db=jdbc:postgresql://localhost/idoldb?user=idol&password=idol
#
# west longitude, south latitude, east longitude, north latitude
# 
# The query must produce mapname, west, south, east, and north.  It
# must have exactly one argument, the '?' in GeomFromText, which is
# a MultiPoint.
#
idol.pgsql.query=SELECT mapname, X(GeometryN(bounds, 1)) AS west, Y(GeometryN(bounds, 1)) AS south, X(GeometryN(bounds, 2)) AS east, Y(GeometryN(bounds, 2)) AS north FROM raster_lonlat WHERE (bounds && GeomFromText(?, 4326));
